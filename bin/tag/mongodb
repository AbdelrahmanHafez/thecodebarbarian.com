<em><p><em>This post was featured as a guest blog post for MongoDB on April 30th 2013, which can be found <a href="http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and">here</a></em></p>
</em><em><p>If you&#39;ve ever tried to build any kind of website, odds are you&#39;ve had to create some way of validating and saving input from a form.  Back in the bad old days this used to be a huge pain, because there were no good frameworks to help get the job done right.  The three primary pain points that you have to deal with when trying to validate a form without the aid of a framework are:</p>
</em><em><p>If you&#39;re familiar with Ruby on Rails and are using MongoDB to build a NodeJS app, you might miss some slick ActiveRecord features, such as declarative validation. Diving into most of the basic tutorials out there, you&#39;ll find that many basic web development tasks are more work than you like. For example, if we borrow the style of <a href="http://howtonode.org/express-mongodb">http://howtonode.org/express-mongodb</a>, a route that pulls a document by its ID will look something like this:</p>
</em><em><p>I&#39;ve received several emails asking for instructions on how to set up a basic MEAN stack app. I&#39;m going to take it one step further and give you guys a two-part post that will walk you through creating your first MEAN stack app- from installing the tools to actually writing the code. In Part One we&#39;ll go through the setup and installation process. Next in Part Two we&#39;ll walk through the steps for building a very simple to-do list. Part One consists of seven steps, although only the first two are are strictly necessary.</p>
</em><em><p>In last week&#39;s blog post, I showed you how to install all of the basic tools that you need to get up and running with the MEAN Stack. Didn&#39;t catch that one and need help getting started with the MEAN Stack? You can find everything you need in <a href="http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/">Introduction to the MEAN Stack, Part One</a>.</p>
</em><em><p>When you are looking to run analytics on large and complex data sets, you might instinctively reach for Hadoop. However, if your data&#39;s in MongoDB, using the Hadoop connector seems like overkill if your data fits on your laptop. Luckily, MongoDB&#39;s built-in <a href="http://docs.mongodb.org/manual/core/aggregation/">aggregation framework</a> offers a quick solution for running sophisticated analytics right from your MongoDB instance without needing any extra setup.</p>
</em><em><p>As much as I love geeking out about <a href="http://thecodebarbarian.com/2014/02/14/crunching-30-years-of-nba-data-with-mongodb-aggregation/">basketball stats</a>, I want to put a MongoDB data set out there that&#39;s a bit more app-friendly: the <a href="http://www.ars.usda.gov/Services/docs.htm?docid=22771">USDA SR25 nutrient database</a>. You can download this data set from my S3 bucket <a href="https://s3.amazonaws.com/valeri.karpov.mongodb/usda.nutrition.tgz">here</a>, and plug it into your MongoDB instance using <a href="http://docs.mongodb.org/manual/reference/program/mongorestore/">mongorestore</a>. I&#39;m very meticulous about nutrition and have, at times, kept a food journal, but sites like FitDay and DailyBurn have far too much spam and are far too poorly designed to be a viable option. With this data set, I plan on putting together an open source web-based food journal in the near future. However, I encourage you to use this data set to build your own apps.</p>
</em>