<html><head><script type="text/javascript">var _sf_startpt=(new Date()).getTime()
</script><title>What's New in Mongoose 3.8.9 | www.thecodebarbarian.com</title><meta name="viewport" content="width=device-width, initial-scale=1"/><link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Merriweather:400,400italic,600,700" rel="stylesheet" type="text/css"/><link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet"/><link href="/style/style.css" rel="stylesheet" type="text/css"/><link href="/style/github.css" rel="stylesheet" type="text/css"/><script href="http://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script><script href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script><script href="/javascript/sidebar.js" type="text/javascript"></script><meta property="og:title" content="What's New in Mongoose 3.8.9"/><meta property="og:url" content="http://www.thecodebarbarian.com/2014/05/09/whats-new-in-mongoose-3-8-9"/><meta property="og:image" content="//houstonbeerweek.com/cal/uploads/mvsc.jpg"/><meta property="og:site_name" content="The Code Barbarian"/></head><body><div class="navbar social-links hidden-sm hidden-xs"><div class="container"><ul class="nav navbar-nav navbar-right"><li><a href="http://www.twitter.com/code_barbarian">twitter</a></li><li><a href="http://www.github.com/vkarpov15">github</a></li></ul></div></div><div id="nav" class="navbar"><div class="container"><div class="navbar-header"><button type="button" data-toggle="collapse" data-target="#home-nav-mobile" class="btn btn-default navbar-toggle"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="/" class="navbar-brand big-brand"><img src="/images/Barbarian_Head.png" class="logo"/><span class="site-name">The Code Barbarian  </span></a></div><div id="home-nav-mobile" class="navbar-right collapse navbar-collapse"><ul class="nav navbar-nav"><li><a href="/tag/mongodb">MongoDB</a></li><li><a href="/tag/angularjs">AngularJS</a></li><li><a href="/tag/nodejs">NodeJS</a></li><li><a href="/tag/paleo">Paleo</a></li><li class="hidden-md hidden-lg"><a href="#">@code_barbarian</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Github</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Facebook</a></li></ul></div></div></div><div class="container-fluid"><div id="desktop-right-bar" class="col-lg-3 col-lg-offset-9 right-bar"><div class="right-bar-content-slider pull-right"><div class="row search-container"><div class="col-lg-12"><div class="form-group"></div><label>Search</label><form onsubmit="window.location.href = 'https://www.google.im/search?q=' + encodeURIComponent(document.getElementById('searchQ').value) + '+site:thecodebarbarian.com'; return false;"><div class="input-group"><input id="searchQ" type="text" class="form-control"/><div class="input-group-addon search-button"><i class="fa fa-search"></i></div></div></form></div></div><div class="row recent-posts right-bar-group"><div class="col-lg-12"><p class="right-bar-label">All Time Most Popular </p><ul class="list-unstyled"><li class="right-bar-li"><a href="/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/">Introduction to the MEAN Stack, Part One: Setting Up Your Tools</a></li><li class="right-bar-li"><a href="/2013/09/23/the-8020-guide-to-writing-angularjs-directives/">The 80/20 Guide to Writing AngularJS Directives</a></li><li class="right-bar-li"><a href="/2013/07/29/introduction-to-the-mean-stack-part-two-building-and-testing-a-to-do-list/">Introduction to the MEAN Stack, Part Two: Building and Testing a To-do List</a></li><li class="right-bar-li"><a href="/2013/05/12/how-to-easily-validate-any-form-ever-using-angularjs/">How to Easily Validate Any Form Ever Using AngularJS</a></li></ul></div></div><div class="row recent-posts right-bar-group"><div class="col-lg-12"><p class="right-bar-label">Recent Posts</p><ul class="list-unstyled"><li class="right-bar-li"><a href="/mongodb-gridfs-stream">The MongoDB Node.js Driver's New Streaming GridFS API</a></li><li class="right-bar-li"><a href="/2015/10/09/ionic-loopback-mobile-app">Ionic Framework and LoopBack, Part III: Building an Ionic App</a></li><li class="right-bar-li"><a href="/2015/09/04/ionic-loopback-directives">Ionic Framework and LoopBack, Part II: Directives with the AngularJS LoopBack SDK</a></li><li class="right-bar-li"><a href="/2015/08/07/ionic-loopback-rest-api">Ionic Framework and LoopBack, Part I: Building a LoopBack REST API</a></li></ul></div></div></div></div></div><div id="mobile-sharing-options" class="container-fluid hidden-sm hidden-md hidden-lg"><div class="row"><div class="col-lg-12"><div class="post-sharing-options"><div class="row"><div class="col-xs-3 twitter-share sharing-option"><a href="https://twitter.com/share?url=http%3A%2F%2Fwww.thecodebarbarian.com%2F2014%2F05%2F09%2Fwhats-new-in-mongoose-3-8-9&amp;via=code_barbarian" class="social"><i class="fa fa-twitter"></i></a></div><div class="col-xs-3 facebook-share sharing-option"><a href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.thecodebarbarian.com%2F%2F2014%2F05%2F09%2Fwhats-new-in-mongoose-3-8-9" class="social"><i class="fa fa-facebook"></i></a></div><div class="col-xs-3 google-share sharing-option"><a href="https://plus.google.com/share?url=http%3A%2F%2Fwww.thecodebarbarian.com%2F%2F2014%2F05%2F09%2Fwhats-new-in-mongoose-3-8-9" class="social"><i class="fa fa-google-plus"></i></a></div><div class="col-xs-3 comment sharing-option"><a href="#disqus_thread" class="social"><i class="fa fa-comment"></i></a></div></div></div></div></div></div><div id="desktop-sharing-options" class="post-sharing-options hidden-xs pull-left"><ul class="list-unstyled"><li class="twitter-share"><a href="https://twitter.com/share?url=http%3A%2F%2Fwww.thecodebarbarian.com%2F2014%2F05%2F09%2Fwhats-new-in-mongoose-3-8-9&amp;via=code_barbarian" class="social"><i class="fa fa-twitter sharing-option"></i></a></li><li class="facebook-share"><a href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.thecodebarbarian.com%2F%2F2014%2F05%2F09%2Fwhats-new-in-mongoose-3-8-9" class="social"><i class="fa fa-facebook sharing-option"></i></a></li><li class="google-share"><a href="https://plus.google.com/share?url=http%3A%2F%2Fwww.thecodebarbarian.com%2F%2F2014%2F05%2F09%2Fwhats-new-in-mongoose-3-8-9" class="social"><i class="fa fa-google-plus sharing-option"></i></a></li></ul></div><div class="container"><div class="col-lg-9 post-text"><div class="row"><div class="title-byline-container"><h1 class="post-title">What's New in Mongoose 3.8.9 </h1><div class="credits"><span class="byline">by Valeri Karpov</span><span class="byhandle"><a href="http://www.twitter.com/code_barbarian">@code_barbarian</a></span><span class="bydate">May 09, 2014</span></div></div></div><div class="post-body-text-container"><p>I have an important announcement to make: over the last couple weeks I&#39;ve been taking over maintaining <a href="http://mongoosejs.com/">mongoose</a>, the popular MongoDB/NodeJS ODM. I have some very big shoes to fill, <a href="https://twitter.com/aaronheckmann">Aaron Heckmann</a> has done an extraordinary job building mongoose into an indispensable part of the NodeJS ecosystem. As an avid user of mongoose over the last two years, I look forward to continuing mongoose&#39;s storied tradition of making dealing with data elegant and fun. However, mongoose isn&#39;t perfect, and I&#39;m already looking forward to the next major stable release, 4.0.0. Suggestions are most welcome, but please be patient, I&#39;m still trying to catch up on the backlog of issues and pull requests.</p>
<h2 id="on-to-what-s-new-in-3-8-9">On to what&#39;s new in 3.8.9</h2>
<p>On that note, Mongoose 3.8.9 was (finally) released yesterday. This was primarily a maintenance release, the major priority was to clean up several test failures against the new stable version of the MongoDB server, 2.6.x, without any backward-breaking API changes. I&#39;m proud to say that 3.8.9 should be compatible with MongoDB 2.2.x, 2.4.x, and 2.6.x. In addition, I added improved support for a couple of key MongoDB 2.6 features:</p>
<h3 id="support-for-text-search-in-mongodb-2-6-x">Support for Text Search in MongoDB 2.6.x</h3>
<p>As I mentioned in my post on <a href="http://thecodebarbarian.com/2014/04/10/a-nodejs-perspective-on-whats-new-in-mongodb-2-6-part-i-text-search/">text search</a>, mongoose 3.8.8 didn&#39;t quite support text search yet: mongoose prevented you from sorting by text score. <a href="https://github.com/aheckmann/mquery/commit/86a054aef1eec3701359e18bfcf24d12a320cace">This commit</a>, which went into mquery 0.6.0, allows you to use the new <a href="http://docs.mongodb.org/manual/reference/operator/projection/meta/"><code>$meta</code> operator</a> in <code>sort()</code> calls. Here&#39;s an example of how you would use text search with sorting in mongoose:</p>
<pre><code>/* <span class="hljs-type">Blog</span> post collection <span class="hljs-keyword">with</span> two documents:
 * { title : <span class="hljs-symbol">'text</span> search <span class="hljs-keyword">in</span> mongoose' }
 * { title : <span class="hljs-symbol">'searching</span> <span class="hljs-keyword">in</span> mongoose' }
 * <span class="hljs-keyword">and</span> a text index on the <span class="hljs-symbol">'title'</span> field */
<span class="hljs-type">BlogPost</span>.
  find(
    { $text : { $search : <span class="hljs-symbol">'text</span> search' } },
    { score : { $meta: <span class="hljs-string">"textScore"</span> } }
  ).
  sort({ score : { $meta : <span class="hljs-symbol">'textScore'</span> } }).
  limit(<span class="hljs-number">2</span>).
  exec(<span class="hljs-keyword">function</span>(error, documents) {
    <span class="hljs-keyword">assert</span>.ifError(error);
    <span class="hljs-keyword">assert</span>.equal(<span class="hljs-number">2</span>, documents.length);
    <span class="hljs-keyword">assert</span>.equal(<span class="hljs-symbol">'text</span> search <span class="hljs-keyword">in</span> mongoose', documents[<span class="hljs-number">0</span>].title);
    <span class="hljs-keyword">assert</span>.equal(<span class="hljs-symbol">'searching</span> <span class="hljs-keyword">in</span> mongoose', documents[<span class="hljs-number">1</span>].title);
    db.close<span class="hljs-literal">()</span>;
    <span class="hljs-keyword">done</span><span class="hljs-literal">()</span>;
  });
</code></pre><p>The relevant test case can be found <a href="https://github.com/LearnBoost/mongoose/blob/4a812b535382527b771e85c4cf2cc72eab2814ff/test/model.querying.test.js#L1567-1589">here</a> (there&#39;s also <a href="https://github.com/LearnBoost/mongoose/blob/4a812b535382527b771e85c4cf2cc72eab2814ff/test/model.querying.test.js#L1452-1478">test coverage</a> for text search without sorting). Please note that you&#39;re responsible for making sure you&#39;re running &gt;= MongoDB 2.6.0, running text queries against older versions of MongoDB will not give you the expected behavior. MongoDB&#39;s docs about text search can be found <a href="http://docs.mongodb.org/manual/core/index-text/">here</a>.</p>
<h3 id="aggregation-helper-for-out-">Aggregation helper for <code>$out</code>:</h3>
<p>As I mentioned in <a href="http://thecodebarbarian.com/2014/04/25/a-nodejs-perspective-on-whats-new-in-mongodb-2-6-part-ii-aggregation-out/">my post</a> about the aggregation framework&#39;s <code>$out</code> pipeline stage (which pipes the aggregation output to a collection), mongoose&#39;s aggregate() function doesn&#39;t prevent you from using <code>$out</code>. However, mongoose also supports syntactic sugar for chaining helper functions onto <code>aggregate()</code> for building an aggregation pipeline:</p>
<pre><code><span class="hljs-constant">My</span>Model.aggregate()
  .<span class="hljs-literal">group</span>(<span class="hljs-literal">group</span>.$<span class="hljs-literal">group</span>)
  .<span class="hljs-literal">project</span>(<span class="hljs-literal">project</span>.$<span class="hljs-literal">project</span>)
  .<span class="hljs-keyword">exec</span>(function (err, <span class="hljs-keyword">res) {</span>
  <span class="hljs-keyword">}</span>);
</code></pre><p><a href="https://github.com/LearnBoost/mongoose/commit/c228c734e899f7f82a944e7cee545bf47c5cab6e">This commit</a> adds a <code>.out()</code> helper function that you can use to add a <code>$out</code> stage to your pipeline. Note that you&#39;re responsible for making sure that the <code>.out()</code> function is the last stage of your pipeline, because the MongoDB server will return an error if it isn&#39;t. The relevant test case can be found here. Here&#39;s how the new helper function looks in action:</p>
<pre><code><span class="hljs-keyword">var</span> outputCollection = 'my_output_collection';

<span class="hljs-type">MyModel</span>.aggregate()
  .group(group.$group)
  .project(project.$project)
  .<span class="hljs-keyword">out</span>(outputCollection)
  .exec(function(error, <span class="hljs-literal">result</span>) {
  });
</code></pre><h3 id="a-minor-caveat-for-2-6-x-compatibility">A Minor Caveat For 2.6.x Compatibility</h3>
<p>There is still one unfortunate edge case remaining in 3.8.9 which only affects MongoDB 2.6.x. MongoDB 2.6.x unfortunately no longer allows <a href="https://jira.mongodb.org/browse/SERVER-12266">empty <code>$set</code> operators</a> to be passed to <code>update()</code> and <code>findAndModify()</code>. This change only affects mongoose in the case where you set the <code>upsert</code> flag to true. <a href="https://github.com/LearnBoost/mongoose/commit/c1efafb2b05bf3ed455ad6ce9631d69240c76498">This commit</a> attempts to mitigate this API inconsistency, but there is still one case where you will get an error on MongoDB 2.6.x but not in 2.4.x: if the query passed to your <code>findAndModify()</code> only includes an <code>_id</code> field. For example,</p>
<pre><code><span class="hljs-tag">MyModel</span><span class="hljs-class">.findOneAndUpdate</span>(
  <span class="hljs-rules">{ <span class="hljs-rule"><span class="hljs-attribute">_id</span>:<span class="hljs-value"> <span class="hljs-string">'MY_ID'</span> </span></span></span>},
  <span class="hljs-rules">{<span class="hljs-rule">}</span></span>,
  <span class="hljs-rules">{ <span class="hljs-rule"><span class="hljs-attribute">upsert</span>:<span class="hljs-value"> true </span></span></span>},
  <span class="hljs-tag">function</span>(<span class="hljs-tag">error</span>, <span class="hljs-tag">document</span>) <span class="hljs-rules">{
  <span class="hljs-rule">}</span></span>);
</code></pre><p>Will return a server error on MongoDB 2.6.1 but not 2.4.10. Right now, there is no good way to handle this case in both 2.4 and 2.6 without either doing an if-statement on the version or breaking the existing API. You can track the progress of this issue on <a href="https://github.com/LearnBoost/mongoose/issues/2065">Github</a>.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Hope y&#39;all are as excited about mongoose&#39;s future as I am. There&#39;s lots of exciting ideas that I&#39;m looking forward to getting into mongoose 4.0. You&#39;re more than welcome to add suggestions for new features or behavior changes on <a href="https://github.com/LearnBoost/mongoose/issues">Github issues</a>. I&#39;m looking forward to seeing what y&#39;all can come up with for improving mongoose and what y&#39;all will be able to do with future versions.</p>
</div><div style="color: #666666; border-top: 1px dashed #666666; margin: 25px; text-align: center; padding-top: 10px"><em>Found a typo or error? Open up a pull request! This post is
available as markdown on&nbsp;<a href="https://github.com/vkarpov15/thecodebarbarian.com/blob/master/lib/posts/20140509_mongoose_389.md">Github</a></em></div><div id="disqus_thread"></div><script type="text/javascript">/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
var disqus_shortname = 'codebarbarian'; // required: replace example with your forum shortname

/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();</script><noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a></div></div><div style="padding-bottom: 100px">&nbsp;</div><script type="text/javascript">!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
  analytics.load("5DErrxzVhprg8sNh8xaiKDR6dNa7yGTI");
  analytics.page()
}}();</script><script type="text/javascript">analytics.track('opened post',
  { title: "What's New in Mongoose 3.8.9", time: new Date() });
  </script></body></html>