<html><head><script type="text/javascript">var _sf_startpt=(new Date()).getTime()
</script><title>AngularJS | www.thecodebarbarian.com</title><meta name="viewport" content="width=device-width, initial-scale=1"/><link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Merriweather:400,400italic,600,700" rel="stylesheet" type="text/css"/><link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet"/><link href="/style/style.css" rel="stylesheet" type="text/css"/><link href="/style/github.css" rel="stylesheet" type="text/css"/><script href="http://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script><script href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script><script href="/javascript/sidebar.js" type="text/javascript"></script></head><body><div class="navbar social-links hidden-sm hidden-xs"><div class="container"><ul class="nav navbar-nav navbar-right"><li><a href="http://www.twitter.com/code_barbarian">twitter</a></li><li><a href="http://www.github.com/vkarpov15">github</a></li></ul></div></div><div id="nav" class="navbar"><div class="container"><div class="navbar-header"><button type="button" data-toggle="collapse" data-target="#home-nav-mobile" class="btn btn-default navbar-toggle"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="/" class="navbar-brand big-brand"><img src="/images/Barbarian_Head.png" class="logo"/><span class="site-name">The Code Barbarian  </span></a></div><div id="home-nav-mobile" class="navbar-right collapse navbar-collapse"><ul class="nav navbar-nav"><li><a href="/tag/mongodb">MongoDB</a></li><li><a href="/tag/angularjs">AngularJS</a></li><li><a href="/tag/nodejs">NodeJS</a></li><li><a href="/tag/paleo">Paleo</a></li><li class="hidden-md hidden-lg"><a href="#">@code_barbarian</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Github</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Facebook</a></li></ul></div></div></div><div class="container-fluid"></div><div id="mobile-sharing-options" class="container-fluid hidden-sm hidden-md hidden-lg"><div class="row"><div class="col-lg-12"></div></div></div><div class="container"><div class="col-lg-9"><div class="container-fluid"><div class="row"><h2><a href="/2015/02/13/better-angularjs-form-validation-with-mongoose">Better AngularJS Form Validation with Mongoose</a></h2><div class="title-byline-container"><div class="credits">February 20, 2015</div></div></div><div class="row"><div class="col-lg-3"><img src="//i.imgur.com/gZwWByl.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>People have often asked me about my biggest pain points with AngularJS.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2015/01/24/angularjs-interceptors">An 80/20 Guide to AngularJS HTTP Interceptors</a></h2><div class="title-byline-container"><div class="credits">January 24, 2015</div></div></div><div class="row"><div class="col-lg-3"><img src="//i.imgur.com/teSiqj9.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>HTTP <em>interceptors</em> are an impressive AngularJS feature that doesn&#39;t get nearly enough press. Interceptors define custom transformations for HTTP requests and responses at the application level.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2015/01/17/angularjs-loopback">Creating REST APIs and Clients with LoopBack and AngularJS</a></h2><div class="title-byline-container"><div class="credits">January 17, 2015</div></div></div><div class="row"><div class="col-lg-3"><img src="//i.imgur.com/PULVzVs.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>Recently, I&#39;ve been looking into <a href="http://strongloop.com/node-js/loopback-framework/">StrongLoop&#39;s LoopBack framework</a>. LoopBack generates Express REST APIs by asking you a few simple questions at the command line. LoopBack lets you swap out different storage layers. For each model you define, you can choose to store it in MongoDB, Oracle, MySQL, or Microsoft SQL Server (or even in memory). Say you decide to store your users in MongoDB but your user&#39;s gift cards in MySQL (for transactions). Even if you started writing your code with gift cards stored in MongoDB, LoopBack&#39;s database abstraction layer makes switching a one-liner. Furthermore, LoopBack has SDKs for generating REST API clients in AngularJS, Android, and iOS. In short, LoopBack is a powerful tool for generating REST APIs that you can extend to scaffold client-side code.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/12/04/new-blog-and-book-announcement">New Blog and Book Announcement</a></h2><div class="title-byline-container"><div class="credits">December 04, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//i.imgur.com/n3Ekf24.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>I have a couple important announcements to make. First, as you might have</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/01/31/what-you-need-to-know-about-angularjs-data-binding">What You Need To Know About AngularJS Data Binding</a></h2><div class="title-byline-container"><div class="credits">January 31, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/01/fiendishchain-tf05-jp-vg.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>You hear a lot about data binding in AngularJS, and with good reason: its at the heart of everything you do with Angular. I&#39;ve mentioned data binding more than a few times in my guides to <a href="http://thecodebarbarian.com/2013/09/23/the-8020-guide-to-writing-angularjs-directives/">directives</a> and <a href="http://thecodebarbarian.com/2014/01/17/the-8020-guide-to-writing-and-using-angularjs-filters/">filters</a>, but I haven&#39;t quite explained the internals of how data binding work. To novices, it seems like straight sorcery, but, in reality, data binding is fundamentally very simple.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/01/17/the-8020-guide-to-writing-and-using-angularjs-filters">The 80/20 Guide to Writing and Using AngularJS Filters</a></h2><div class="title-byline-container"><div class="credits">January 17, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/01/hanashuriken2.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>My <a href="http://thecodebarbarian.com/2013/09/23/the-8020-guide-to-writing-angularjs-directives/">directives post</a> seems to have gone over well. I&#39;ve received emails and comments from readers expressing how much it helped them, so I figured I&#39;d write a post about one of the simultaneously oldest, most useful, and most under appreciated AngularJS features.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/12/02/price-internationalization-with-the-mean-stack">Price Internationalization with the MEAN Stack</a></h2><div class="title-byline-container"><div class="credits">December 02, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//thumbs.dreamstime.com/x/small-currency-dice-forex-chart-18044052.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>Displaying prices in different currencies is a common internationalization task for web developers. However, this task can be a bit tricky:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/09/23//the-8020-guide-to-writing-angularjs-directives">The 80/20 Guide to Writing AngularJS Directives</a></h2><div class="title-byline-container"><div class="credits">September 23, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//thehospitalitycoach.net/wp-content/uploads/2011/07/80-20-Cafe-Restaurant-Rule.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>AngularJS is blowing up right now, and with good reason. There&#39;s nothing more satisfying than using AngularJS to turn 1,000 messy lines of Backbone.js and jQuery spaghetti code into a trivial 10 lines. To put it in a broader context, you can think of AngularJS&#39; place in the world this way: AngularJS is to jQuery as C++11 is to x86 Assembly. However, your quest to capture all the wonderful benefits of AngularJS may be hindered because the documentation is a bit difficult to wrap your mind around. In particular, many readers have told me that the documentation for directives is pretty intimidating, and a lot of experienced users still don&#39;t quite grok how to use them properly.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/07/29//introduction-to-the-mean-stack-part-two-building-and-testing-a-to-do-list">Introduction to the MEAN Stack, Part Two: Building and Testing a To-do List</a></h2><div class="title-byline-container"><div class="credits">July 29, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//developers.google.com/cloud/mean/images/mean_stack.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>In last week&#39;s blog post, I showed you how to install all of the basic tools that you need to get up and running with the MEAN Stack. Didn&#39;t catch that one and need help getting started with the MEAN Stack? You can find everything you need in <a href="http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/">Introduction to the MEAN Stack, Part One</a>.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/07/22//introduction-to-the-mean-stack-part-one-setting-up-your-tools">Introduction to the MEAN Stack, Part One: Setting Up Your Tools</a></h2><div class="title-byline-container"><div class="credits">July 22, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//developers.google.com/cloud/mean/images/mean_stack.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>I&#39;ve received several emails asking for instructions on how to set up a basic MEAN stack app. I&#39;m going to take it one step further and give you guys a two-part post that will walk you through creating your first MEAN stack app- from installing the tools to actually writing the code. In Part One we&#39;ll go through the setup and installation process. Next in Part Two we&#39;ll walk through the steps for building a very simple to-do list. Part One consists of seven steps, although only the first two are are strictly necessary.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/05/12//how-to-easily-validate-any-form-ever-using-angularjs">How to Easily Validate Any Form Ever Using AngularJS</a></h2><div class="title-byline-container"><div class="credits">May 12, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//blog.enfocussolutions.com/Portals/134568/images/istock_000017831176xsmall.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>If you&#39;ve ever tried to build any kind of website, odds are you&#39;ve had to create some way of validating and saving input from a form.  Back in the bad old days this used to be a huge pain, because there were no good frameworks to help get the job done right.  The three primary pain points that you have to deal with when trying to validate a form without the aid of a framework are:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/04/29//easy-web-prototyping-with-mongodb-and-nodejs">The MEAN Stack: MongoDB, ExpressJS, AngularJS, and Node.js</a></h2><div class="title-byline-container"><div class="credits">April 29, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//www.newmancraneins.com/wp-content/uploads/2012/10/The-Benefits-of-Rapid-Prototyping-in-the-Manufacturing-Industry.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p><em>This post was featured as a guest blog post for MongoDB on April 30th 2013, which can be found <a href="http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and">here</a></em></p>
</em></div></div></div></div></div><div style="padding-bottom: 100px">&nbsp;</div><script type="text/javascript">!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
  analytics.load("5DErrxzVhprg8sNh8xaiKDR6dNa7yGTI");
  analytics.page()
}}();</script></body></html>