<html><head><script type="text/javascript">var _sf_startpt=(new Date()).getTime()
</script><title>The Code Barbarian | www.thecodebarbarian.com</title><meta name="viewport" content="width=device-width, initial-scale=1"/><link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Merriweather:400,400italic,600,700" rel="stylesheet" type="text/css"/><link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet"/><link href="/style/style.css" rel="stylesheet" type="text/css"/><script href="http://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script><script href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script><script href="/javascript/sidebar.js" type="text/javascript"></script></head><body><div class="navbar social-links hidden-sm hidden-xs"><div class="container"><ul class="nav navbar-nav navbar-right"><li><a href="http://www.twitter.com/code_barbarian">twitter</a></li><li><a href="http://www.github.com/vkarpov15">github</a></li></ul></div></div><div id="nav" class="navbar"><div class="container"><div class="navbar-header"><button type="button" data-toggle="collapse" data-target="#home-nav-mobile" class="btn btn-default navbar-toggle"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="/" class="navbar-brand big-brand"><img src="/images/Barbarian_Head.png" class="logo"/><span class="site-name">The Code Barbarian  </span></a></div><div id="home-nav-mobile" class="navbar-right collapse navbar-collapse"><ul class="nav navbar-nav"><li><a href="/tag/mongodb">MongoDB</a></li><li><a href="/tag/angularjs">AngularJS</a></li><li><a href="/tag/nodejs">NodeJS</a></li><li><a href="/tag/paleo">Paleo</a></li><li class="hidden-md hidden-lg"><a href="#">@code_barbarian</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Github</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Facebook</a></li></ul></div></div></div><div class="container-fluid"></div><div id="mobile-sharing-options" class="container-fluid hidden-sm hidden-md hidden-lg"><div class="row"><div class="col-lg-12"></div></div></div><div class="container"><div class="col-lg-12 hero-row"><a href="/2013/04/29//easy-web-prototyping-with-mongodb-and-nodejs"><div class="col-lg-8"><div class="row"><div style="background-image:url('//www.newmancraneins.com/wp-content/uploads/2012/10/The-Benefits-of-Rapid-Prototyping-in-the-Manufacturing-Industry.jpg');" class="col-lg-12 hero-image"></div><div class="row"><div class="col-lg-12"><h1 class="hero-title">The MEAN Stack: MongoDB, ExpressJS, AngularJS, and Node.js</h1></div><div class="title-byline-container"><div class="hero-credits">April 29, 2013</div></div></div></div></div><div class="col-lg-4 home-popular"><p id="home-popular-label" class="right-bar-label">All Time Most Popular <ul class="list-unstyled"><li class="right-bar-li"><a href="/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/">Introduction to the MEAN Stack, Part One: Setting Up Your Tools</a></li><li class="right-bar-li"><a href="/2013/09/23/the-8020-guide-to-writing-angularjs-directives/">The 80/20 Guide to Writing AngularJS Directives</a></li><li class="right-bar-li"><a href="/2013/07/29/introduction-to-the-mean-stack-part-two-building-and-testing-a-to-do-list/">Introduction to the MEAN Stack, Part Two: Building and Testing a To-do List</a></li><li class="right-bar-li"><a href="/2013/05/12/how-to-easily-validate-any-form-ever-using-angularjs/">How to Easily Validate Any Form Ever Using AngularJS</a></li></ul></p></div></a></div><div class="col-lg-12"><div class="row"><p class="home-grid-label">Most Recent</p></div><div class="col-lg-4 home-post-grid-member"><a href="/2013/05/12//how-to-easily-validate-any-form-ever-using-angularjs"><div style="background-image:url('//blog.enfocussolutions.com/Portals/134568/images/istock_000017831176xsmall.jpg');" class="home-post-image"></div><h3 class="home-post-title">How to Easily Validate Any Form Ever Using AngularJS</h3><div class="home-date">May 12, 2013</div><div class="home-preview"><em><p>If you&#39;ve ever tried to build any kind of website, odds are you&#39;ve had to create some way of validating and saving input from a form.  Back in the bad old days this used to be a huge pain, because there were no good frameworks to help get the job done right.  The three primary pain points that you have to deal with when trying to validate a form without the aid of a framework are:</p>
</em></div></a></div><div class="col-lg-4 home-post-grid-member"><a href="/2013/06/06//61"><div style="background-image:url('//www.eacgs.com/wp-content/uploads/MongooseEnvGr_Newsletter_WP_03.jpg');" class="home-post-image"></div><h3 class="home-post-title">Mistakes You're Probably Making With MongooseJS, And How To Fix Them</h3><div class="home-date">June 06, 2013</div><div class="home-preview"><em><p>If you&#39;re familiar with Ruby on Rails and are using MongoDB to build a NodeJS app, you might miss some slick ActiveRecord features, such as declarative validation. Diving into most of the basic tutorials out there, you&#39;ll find that many basic web development tasks are more work than you like. For example, if we borrow the style of <a href="http://howtonode.org/express-mongodb">http://howtonode.org/express-mongodb</a>, a route that pulls a document by its ID will look something like this:</p>
</em></div></a></div><div class="col-lg-4 home-post-grid-member"><a href="/2013/06/21//8-reasons-why-better-nutrition-makes-you-a-better-developer"><div style="background-image:url('//picketfencepaleo.com/wp-content/uploads/2012/12/Keep_Calm_and_Eat_Paleo1.jpeg');" class="home-post-image"></div><h3 class="home-post-title">8 Reasons Why Better Nutrition Makes You a Better Developer</h3><div class="home-date">June 21, 2013</div><div class="home-preview"><em><p>Software developers are not known for having the best nutrition. When it comes to development work, the stereotypical late night Red Bull-fueled coding binge is often not too far from the truth. It&#39;s hard to imagine a hackathon without a stack of pizza boxes and a mountain of empty soda bottles. In addition, no good tech firm lets their kitchen run out of chips or Vitamin Water. Proper nutrition is, however, about more than just being thin; it&#39;s about providing proper fuel for your brain so you can code smarter, faster, and better. In this post I&#39;ll give you some anecdotal evidence about why nutrition matters, some resources on how to eat and train properly, and finally give you a list of 8 concrete benefits I&#39;ve enjoyed since I started eating properly.</p>
</em></div></a></div><div class="col-lg-4 home-post-grid-member"><a href="/2013/07/22//introduction-to-the-mean-stack-part-one-setting-up-your-tools"><div style="background-image:url('//developers.google.com/cloud/mean/images/mean_stack.png');" class="home-post-image"></div><h3 class="home-post-title">Introduction to the MEAN Stack, Part One: Setting Up Your Tools</h3><div class="home-date">July 22, 2013</div><div class="home-preview"><em><p>I&#39;ve received several emails asking for instructions on how to set up a basic MEAN stack app. I&#39;m going to take it one step further and give you guys a two-part post that will walk you through creating your first MEAN stack app- from installing the tools to actually writing the code. In Part One we&#39;ll go through the setup and installation process. Next in Part Two we&#39;ll walk through the steps for building a very simple to-do list. Part One consists of seven steps, although only the first two are are strictly necessary.</p>
</em></div></a></div><div class="col-lg-4 home-post-grid-member"><a href="/2013/07/29//introduction-to-the-mean-stack-part-two-building-and-testing-a-to-do-list"><div style="background-image:url('//developers.google.com/cloud/mean/images/mean_stack.png');" class="home-post-image"></div><h3 class="home-post-title">Introduction to the MEAN Stack, Part Two: Building and Testing a To-do List</h3><div class="home-date">July 29, 2013</div><div class="home-preview"><em><p>In last week&#39;s blog post, I showed you how to install all of the basic tools that you need to get up and running with the MEAN Stack. Didn&#39;t catch that one and need help getting started with the MEAN Stack? You can find everything you need in <a href="http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/">Introduction to the MEAN Stack, Part One</a>.</p>
</em></div></a></div><div class="col-lg-4 home-post-grid-member"><a href="/2013/09/23//the-8020-guide-to-writing-angularjs-directives"><div style="background-image:url('//thehospitalitycoach.net/wp-content/uploads/2011/07/80-20-Cafe-Restaurant-Rule.jpg');" class="home-post-image"></div><h3 class="home-post-title">The 80/20 Guide to Writing AngularJS Directives</h3><div class="home-date">September 23, 2013</div><div class="home-preview"><em><p>AngularJS is blowing up right now, and with good reason. There&#39;s nothing more satisfying than using AngularJS to turn 1,000 messy lines of Backbone.js and jQuery spaghetti code into a trivial 10 lines. To put it in a broader context, you can think of AngularJS&#39; place in the world this way: AngularJS is to jQuery as C++11 is to x86 Assembly. However, your quest to capture all the wonderful benefits of AngularJS may be hindered because the documentation is a bit difficult to wrap your mind around. In particular, many readers have told me that the documentation for directives is pretty intimidating, and a lot of experienced users still don&#39;t quite grok how to use them properly.</p>
</em></div></a></div></div></div><div style="padding-bottom: 100px">&nbsp;</div><script type="text/javascript">var _sf_async_config = { uid: 57424, domain: 'rearden.us.to', useCanonical: true };
(function() {
  function loadChartbeat() {
    window._sf_endpt = (new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src','//static.chartbeat.com/js/chartbeat.js');
    document.body.appendChild(e);
  };
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
    loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();</script></body></html>