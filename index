<html><head><script type="text/javascript">var _sf_startpt=(new Date()).getTime()
</script><title> | www.thecodebarbarian.com</title><meta name="viewport" content="width=device-width, initial-scale=1"/><link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Merriweather:400,400italic,600,700" rel="stylesheet" type="text/css"/><link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet"/><link href="/style/style.css" rel="stylesheet" type="text/css"/><script href="http://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script><script href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script></head><body><div class="navbar social-links hidden-sm hidden-xs"><div class="container"><ul class="nav navbar-nav navbar-right"><li><a href="#">twitter</a></li><li><a href="#">github</a></li><li><a href="#">facebook</a></li></ul></div></div><div id="nav" class="navbar"><div class="container"><div class="navbar-header"><button type="button" data-toggle="collapse" data-target="#home-nav-mobile" class="btn btn-default navbar-toggle"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="/" class="navbar-brand big-brand"><img src="/images/Barbarian_Head.png" class="logo"/><span class="site-name">The Code Barbarian  </span></a></div><div id="home-nav-mobile" class="navbar-right collapse navbar-collapse"><ul class="nav navbar-nav"><li><a href="/tag/mongodb">MongoDB</a></li><li><a href="/tag/angularjs">AngularJS</a></li><li><a href="/tag/nodejs">NodeJS</a></li><li class="hidden-md hidden-lg"><a href="#">@code_barbarian</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Github</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Facebook</a></li></ul></div></div></div><div class="container-fluid"><div class="col-lg-3 col-lg-offset-9 right-bar hidden-md hidden-sm hidden-xs"><div class="right-bar-content-slider pull-right"><div class="row search-container"><div class="col-lg-12"><div class="form-group"></div><label>Search</label><div class="input-group"><input type="text" class="form-control"/><div class="input-group-addon search-button"><i class="fa fa-search"></i></div></div></div></div><div class="row recent-posts right-bar-group"><div class="col-lg-12"><p class="right-bar-label">Recent Posts</p><ul class="list-unstyled"><li class="right-bar-li">Introduction to the Mean Stack</li><li class="right-bar-li">How to Validate Any Form Ever Using MongooseJS</li><li class="right-bar-li">Some Paleo Nonsense</li></ul></div></div><div class="row recent-posts right-bar-group"><div class="col-lg-12"><p class="right-bar-label">Popular Posts</p><ul class="list-unstyled"><li class="right-bar-li">Introduction to the Mean Stack</li><li class="right-bar-li">How to Validate Any Form Ever Using MongooseJS</li><li class="right-bar-li">Some Paleo Nonsense</li></ul></div></div></div></div></div><div id="mobile-sharing-options" class="container-fluid hidden-sm hidden-md hidden-lg"><div class="row"><div class="col-lg-12"><div class="post-sharing-options"><div class="row"><div class="col-xs-3 twitter-share sharing-option"><i class="fa fa-twitter"></i></div><div class="col-xs-3 facebook-share sharing-option"><i class="fa fa-facebook"></i></div><div class="col-xs-3 google-share sharing-option"><i class="fa fa-google-plus"></i></div><div class="col-xs-3 comment sharing-option"><i class="fa fa-comment"></i></div></div></div></div></div></div><div class="container"><div class="col-lg-9"><div class="container-fluid"><div class="row"><h2><a href="/2014/09/04/defending-against-query-selector-injection-attacks">Defending Against Query Selector Injection Attacks</a></h2><div class="title-byline-container"><div class="credits">September 04, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//farm3.static.flickr.com/2457/3826282995_3e69f496b4_m.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>In case you haven&#39;t come across Petko Petkov&#39;s post on injection attacks against MongoDB and NodeJS yet, <a href="http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html">its definitely worth a careful read</a>. In this article, he explains a pretty simple exploit that I suspect affects a fair number of applications, including some that I&#39;ve implemented.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/06/03/the-future-of-mongoosejs">The Future of MongooseJS</a></h2><div class="title-byline-container"><div class="credits">June 03, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/06/harmony_is_coming.jpg?w=199&amp;h=300" style="width: 100%"/></div><div class="col-lg-9"><em><p>Two weeks ago marked a big milestone: <a href="https://github.com/LearnBoost/mongoose/blob/master/History.md#390-unstable--2014-05-22">mongoose 3.9.0</a> was released. Be warned, mongoose&#39;s versioning practice is that even numbered branches are stable and odd are unstable. While all our tests check out on 3.9.0, I would recommend sticking to 3.8.x releases in production for now. 3.9.0 was mongoose&#39;s first unstable release since October 2013. While the changes in 3.9.0 were relatively minor, they open the door to getting some interesting features into 4.0. Here are some of the high-level features I think should make it in to 4.0:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/05/09/whats-new-in-mongoose-3-8-9">What's New in Mongoose 3.8.9</a></h2><div class="title-byline-container"><div class="credits">May 09, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//houstonbeerweek.com/cal/uploads/mvsc.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>I have an important announcement to make: over the last couple weeks I&#39;ve been taking over maintaining <a href="http://mongoosejs.com/">mongoose</a>, the popular MongoDB/NodeJS ODM. I have some very big shoes to fill, <a href="https://twitter.com/aaronheckmann">Aaron Heckmann</a> has done an extraordinary job building mongoose into an indispensable part of the NodeJS ecosystem. As an avid user of mongoose over the last two years, I look forward to continuing mongoose&#39;s storied tradition of making dealing with data elegant and fun. However, mongoose isn&#39;t perfect, and I&#39;m already looking forward to the next major stable release, 4.0.0. Suggestions are most welcome, but please be patient, I&#39;m still trying to catch up on the backlog of issues and pull requests.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/04/25/a-nodejs-perspective-on-whats-new-in-mongodb-2-6-part-ii-aggregation-out">A NodeJS Perspective on What's New in MongoDB 2.6, Part II: Aggregation $out</a></h2><div class="title-byline-container"><div class="credits">April 25, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//samuellam.files.wordpress.com/2012/09/nodemongo.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>From a performance perspective as well as a developer productivity perspective, MongoDB really shines when you only need to load one document to display a particular page. A traditional hard drive only needs one sequential read to load a single MongoDB document, which limits your performance overhead. In addition, much like how <a href="http://rapgenius.com/Nas-one-mic-lyrics#note-948605">Nas says life is simple because all he needs is one mic</a>, grouping all the data for a single page into one document makes understanding and debugging the page much simpler.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/04/10/a-nodejs-perspective-on-whats-new-in-mongodb-2-6-part-i-text-search">A NodeJS Perspective on What's New in MongoDB 2.6, Part I: Text Search</a></h2><div class="title-byline-container"><div class="credits">April 10, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//samuellam.files.wordpress.com/2012/09/nodemongo.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>MongoDB shipped the newest stable version of its server, 2.6.0, this week. This new release is massive: there were about <a href="https://github.com/mongodb/mongo/branches">4000 commits</a> between 2.4 and 2.6. Unsurprisingly, the <a href="http://docs.mongodb.org/manual/release-notes/2.6/">release notes</a> are a pretty dense read and don&#39;t quite convey how cool some of these new features are. To remedy that, I&#39;ll dedicate a couple posts to putting on my NodeJS web developer hat and exploring interesting use cases for new features in 2.6. The first feature I&#39;ll dig in to is text search, or, in layman&#39;s terms, Google for your MongoDB documents.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/03/28/plugging-usda-nutrition-data-into-mongodb">Plugging USDA Nutrition Data into MongoDB</a></h2><div class="title-byline-container"><div class="credits">March 28, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//i247.photobucket.com/albums/gg158/MDA2008/Bradford/BaconTower.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>As much as I love geeking out about <a href="http://thecodebarbarian.com/2014/02/14/crunching-30-years-of-nba-data-with-mongodb-aggregation/">basketball stats</a>, I want to put a MongoDB data set out there that&#39;s a bit more app-friendly: the <a href="http://www.ars.usda.gov/Services/docs.htm?docid=22771">USDA SR25 nutrient database</a>. You can download this data set from my S3 bucket <a href="https://s3.amazonaws.com/valeri.karpov.mongodb/usda.nutrition.tgz">here</a>, and plug it into your MongoDB instance using <a href="http://docs.mongodb.org/manual/reference/program/mongorestore/">mongorestore</a>. I&#39;m very meticulous about nutrition and have, at times, kept a food journal, but sites like FitDay and DailyBurn have far too much spam and are far too poorly designed to be a viable option. With this data set, I plan on putting together an open source web-based food journal in the near future. However, I encourage you to use this data set to build your own apps.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/03/14/why-math-is-necessary-for-cs-majors">Why Math is Necessary for CS Majors</a></h2><div class="title-byline-container"><div class="credits">March 14, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/03/pure-mathematics-formulc3a6-blackboard.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>While math and computer science have been lumped together for about as long as the latter has existed, there&#39;s a lot of backlash recently toward the idea that a solid math background is integral to being a good developer. The relationship between the two was something that I struggled to grasp as an undergraduate in Computer Science. The relationship between math and CS isn&#39;t as direct as, say, math and physics, or even philosophy and CS. However, taking a rigorous pure math course as an undergraduate will help you significantly, whether you choose to be an ivory tower academic, a developer for the latest hip startup out of Silicon Valley, or an engineer for a big NYC bank.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/02/28/the-optimal-setup-for-listening-to-talks-at-2x-playback-speed">The Optimal Setup for Listening to Talks at 2x Playback Speed</a></h2><div class="title-byline-container"><div class="credits">February 28, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//lh4.googleusercontent.com/HmVWuOlZ3L0le0QELn3yrTzYLJlM1ZMrmWPc1yuOMKC7HmRtwnyXQ1x-uNdwJai_WG9qJ5049XYw_l94ngF4j9Rj_gx7iu4OUIEYO6io9JmoVIK_sAI36YeV-A" style="width: 100%"/></div><div class="col-lg-9"><em><p>If you&#39;re an avid podcast listener and online courseware consumer like I am, odds are you&#39;ve gotten frustrated with how long it takes to listen to a single lecture. An hour-long podcast on <a href="http://www.bulletproofexec.com/">Bulletproof Executive</a>? 20 minutes listening to a TEDTalk from a <a href="https://hackdesign.org/">HackDesign</a> lesson? No offense to these awesome content creators, but ain&#39;t nobody got time for that.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/02/14/crunching-30-years-of-nba-data-with-mongodb-aggregation">Crunching 30 Years of NBA Data with MongoDB Aggregation</a></h2><div class="title-byline-container"><div class="credits">February 14, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//lh3.googleusercontent.com/18mV0Ncz4UqJ0EUjDixCjYvwofYL1RrUi9gEqeh0TjU0GM9H6l6Ghqo6peu9idrh7-3uN5rY5CTcoDlXyg6gXnEgTkkg7kOsBoANvZZuBmH-8x1gu1U98eVhuA" style="width: 100%"/></div><div class="col-lg-9"><em><p>When you are looking to run analytics on large and complex data sets, you might instinctively reach for Hadoop. However, if your data&#39;s in MongoDB, using the Hadoop connector seems like overkill if your data fits on your laptop. Luckily, MongoDB&#39;s built-in <a href="http://docs.mongodb.org/manual/core/aggregation/">aggregation framework</a> offers a quick solution for running sophisticated analytics right from your MongoDB instance without needing any extra setup.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/01/31/what-you-need-to-know-about-angularjs-data-binding">What You Need To Know About AngularJS Data Binding</a></h2><div class="title-byline-container"><div class="credits">January 31, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/01/fiendishchain-tf05-jp-vg.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>You hear a lot about data binding in AngularJS, and with good reason: its at the heart of everything you do with Angular. I&#39;ve mentioned data binding more than a few times in my guides to <a href="http://thecodebarbarian.com/2013/09/23/the-8020-guide-to-writing-angularjs-directives/">directives</a> and <a href="http://thecodebarbarian.com/2014/01/17/the-8020-guide-to-writing-and-using-angularjs-filters/">filters</a>, but I haven&#39;t quite explained the internals of how data binding work. To novices, it seems like straight sorcery, but, in reality, data binding is fundamentally very simple.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/01/24/my-top-5-paleo-lifestyle-hacks-for-new-yorkers">My Top 5 Paleo Lifestyle Hacks for New Yorkers</a></h2><div class="title-byline-container"><div class="credits">January 24, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/01/img_5016.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>It&#39;s official: <a href="http://www.refinery29.com/2013/12/59825/paleo-diet-google-search-2013">paleo was the most searched for health term on Google in 2013</a>, and, thus, paleo is no longer weird. Well, maybe its still a little weird, but at least people don&#39;t look at me like I&#39;m crazy when I order a bunless burger anymore. As a matter of fact, I meet a lot of people who want to try going paleo, but they&#39;re held back by aspects of the paleo lifestyle that seem beyond the pale to the average New York office worker.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/01/17/the-8020-guide-to-writing-and-using-angularjs-filters">The 80/20 Guide to Writing and Using AngularJS Filters</a></h2><div class="title-byline-container"><div class="credits">January 17, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/01/hanashuriken2.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>My <a href="http://thecodebarbarian.com/2013/09/23/the-8020-guide-to-writing-angularjs-directives/">directives post</a> seems to have gone over well. I&#39;ve received emails and comments from readers expressing how much it helped them, so I figured I&#39;d write a post about one of the simultaneously oldest, most useful, and most under appreciated AngularJS features.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/01/10/want-to-ace-your-next-developer-interview-channel-andrew-luck">Want To Ace Your Next Developer Interview? Channel Andrew Luck</a></h2><div class="title-byline-container"><div class="credits">January 10, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//thecodebarbarian.files.wordpress.com/2014/01/andrew-luck.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>I&#39;m going to go out on a limb and say that the single most important quality that differentiates a good software developer from an excellent software developer is the ability to spend hours on a problem where he doesn&#39;t know if or when he&#39;ll find the correct answer. No matter how many unit tests you write or how disciplined your coding practice is, there will inevitably be bugs. Not only that, there will be those annoying, frustrating bugs that you can&#39;t seem to duplicate and you spend hours grinding your teeth trying to figure out why the damn thing doesn&#39;t work. As a matter of fact, when I&#39;m conducting an interview, I often explicitly give people a question that is too difficult to solve in the allotted timeframe, just to see how well the interviewee deals with coming to the realization that they didn&#39;t &quot;ace&quot; the interview.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/12/02/price-internationalization-with-the-mean-stack">Price Internationalization with the MEAN Stack</a></h2><div class="title-byline-container"><div class="credits">December 02, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//thumbs.dreamstime.com/x/small-currency-dice-forex-chart-18044052.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>Displaying prices in different currencies is a common internationalization task for web developers. However, this task can be a bit tricky:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/09/23//the-8020-guide-to-writing-angularjs-directives">The 80/20 Guide to Writing AngularJS Directives</a></h2><div class="title-byline-container"><div class="credits">September 23, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//thehospitalitycoach.net/wp-content/uploads/2011/07/80-20-Cafe-Restaurant-Rule.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>AngularJS is blowing up right now, and with good reason. There&#39;s nothing more satisfying than using AngularJS to turn 1,000 messy lines of Backbone.js and jQuery spaghetti code into a trivial 10 lines. To put it in a broader context, you can think of AngularJS&#39; place in the world this way: AngularJS is to jQuery as C++11 is to x86 Assembly. However, your quest to capture all the wonderful benefits of AngularJS may be hindered because the documentation is a bit difficult to wrap your mind around. In particular, many readers have told me that the documentation for directives is pretty intimidating, and a lot of experienced users still don&#39;t quite grok how to use them properly.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/07/29//introduction-to-the-mean-stack-part-two-building-and-testing-a-to-do-list">Introduction to the MEAN Stack, Part Two: Building and Testing a To-do List</a></h2><div class="title-byline-container"><div class="credits">July 29, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//developers.google.com/cloud/mean/images/mean_stack.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>In last week&#39;s blog post, I showed you how to install all of the basic tools that you need to get up and running with the MEAN Stack. Didn&#39;t catch that one and need help getting started with the MEAN Stack? You can find everything you need in <a href="http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/">Introduction to the MEAN Stack, Part One</a>.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/07/22//introduction-to-the-mean-stack-part-one-setting-up-your-tools">Introduction to the MEAN Stack, Part One: Setting Up Your Tools</a></h2><div class="title-byline-container"><div class="credits">July 22, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="//developers.google.com/cloud/mean/images/mean_stack.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>I&#39;ve received several emails asking for instructions on how to set up a basic MEAN stack app. I&#39;m going to take it one step further and give you guys a two-part post that will walk you through creating your first MEAN stack app- from installing the tools to actually writing the code. In Part One we&#39;ll go through the setup and installation process. Next in Part Two we&#39;ll walk through the steps for building a very simple to-do list. Part One consists of seven steps, although only the first two are are strictly necessary.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/06/21//8-reasons-why-better-nutrition-makes-you-a-better-developer">8 Reasons Why Better Nutrition Makes You a Better Developer</a></h2><div class="title-byline-container"><div class="credits">June 21, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="/images/Barbarian_Head.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>Software developers are not known for having the best nutrition. When it comes to development work, the stereotypical late night Red Bull-fueled coding binge is often not too far from the truth. It&#39;s hard to imagine a hackathon without a stack of pizza boxes and a mountain of empty soda bottles. In addition, no good tech firm lets their kitchen run out of chips or Vitamin Water. Proper nutrition is, however, about more than just being thin; it&#39;s about providing proper fuel for your brain so you can code smarter, faster, and better. In this post I&#39;ll give you some anecdotal evidence about why nutrition matters, some resources on how to eat and train properly, and finally give you a list of 8 concrete benefits I&#39;ve enjoyed since I started eating properly.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/06/06//61">Mistakes You're Probably Making With MongooseJS, And How To Fix Them</a></h2><div class="title-byline-container"><div class="credits">June 06, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="/images/Barbarian_Head.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>If you&#39;re familiar with Ruby on Rails and are using MongoDB to build a NodeJS app, you might miss some slick ActiveRecord features, such as declarative validation. Diving into most of the basic tutorials out there, you&#39;ll find that many basic web development tasks are more work than you like. For example, if we borrow the style of <a href="http://howtonode.org/express-mongodb">http://howtonode.org/express-mongodb</a>, a route that pulls a document by its ID will look something like this:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/05/12//how-to-easily-validate-any-form-ever-using-angularjs">How to Easily Validate Any Form Ever Using AngularJS</a></h2><div class="title-byline-container"><div class="credits">May 12, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="/images/Barbarian_Head.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>If you&#39;ve ever tried to build any kind of website, odds are you&#39;ve had to create some way of validating and saving input from a form.  Back in the bad old days this used to be a huge pain, because there were no good frameworks to help get the job done right.  The three primary pain points that you have to deal with when trying to validate a form without the aid of a framework are:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2013/04/29//easy-web-prototyping-with-mongodb-and-nodejs">The MEAN Stack: MongoDB, ExpressJS, AngularJS, and Node.js</a></h2><div class="title-byline-container"><div class="credits">April 29, 2013</div></div></div><div class="row"><div class="col-lg-3"><img src="/images/Barbarian_Head.png" style="width: 100%"/></div><div class="col-lg-9"><em><p><em>This post was featured as a guest blog post for MongoDB on April 30th 2013, which can be found <a href="http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and">here</a></em></p>
</em></div></div></div></div></div><script type="text/javascript">var _sf_async_config = { uid: 57424, domain: 'rearden.us.to', useCanonical: true };
(function() {
  function loadChartbeat() {
    window._sf_endpt = (new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src','//static.chartbeat.com/js/chartbeat.js');
    document.body.appendChild(e);
  };
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
    loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();</script></body></html>