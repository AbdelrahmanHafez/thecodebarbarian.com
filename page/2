<html><head><script type="text/javascript">var _sf_startpt=(new Date()).getTime()
</script><title>Page 2 | www.thecodebarbarian.com</title><meta name="viewport" content="width=device-width, initial-scale=1"/><link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Merriweather:400,400italic,600,700" rel="stylesheet" type="text/css"/><link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet"/><link href="/style/style.css" rel="stylesheet" type="text/css"/><link href="/style/github.css" rel="stylesheet" type="text/css"/><script href="http://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script><script href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script><script href="/javascript/sidebar.js" type="text/javascript"></script></head><body><div class="navbar social-links hidden-sm hidden-xs"><div class="container"><ul class="nav navbar-nav navbar-right"><li><a href="http://www.twitter.com/code_barbarian">twitter</a></li><li><a href="http://www.github.com/vkarpov15">github</a></li></ul></div></div><div id="nav" class="navbar"><div class="container"><div class="navbar-header"><button type="button" data-toggle="collapse" data-target="#home-nav-mobile" class="btn btn-default navbar-toggle"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a href="/" class="navbar-brand big-brand"><img src="/images/Barbarian_Head.png" class="logo"/><span class="site-name">The Code Barbarian  </span></a></div><div id="home-nav-mobile" class="navbar-right collapse navbar-collapse"><ul class="nav navbar-nav"><li><a href="/tag/mongodb">MongoDB</a></li><li><a href="/tag/angularjs">AngularJS</a></li><li><a href="/tag/nodejs">NodeJS</a></li><li><a href="/tag/paleo">Paleo</a></li><li class="hidden-md hidden-lg"><a href="#">@code_barbarian</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Github</a></li><li class="hidden-md hidden-lg"><a href="#">TCB Facebook</a></li></ul></div></div></div><div class="container-fluid"></div><div id="mobile-sharing-options" class="container-fluid hidden-sm hidden-md hidden-lg"><div class="row"><div class="col-lg-12"></div></div></div><div class="container"><div class="row"><div class="col-lg-9"><div class="container-fluid"><div class="row"><h2><a href="/2014/04/10/a-nodejs-perspective-on-whats-new-in-mongodb-2-6-part-i-text-search">A NodeJS Perspective on What's New in MongoDB 2.6, Part I: Text Search</a></h2><div class="title-byline-container"><div class="credits">April 10, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//samuellam.files.wordpress.com/2012/09/nodemongo.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>MongoDB shipped the newest stable version of its server, 2.6.0, this week. This new release is massive: there were about <a href="https://github.com/mongodb/mongo/branches">4000 commits</a> between 2.4 and 2.6. Unsurprisingly, the <a href="http://docs.mongodb.org/manual/release-notes/2.6/">release notes</a> are a pretty dense read and don&#39;t quite convey how cool some of these new features are. To remedy that, I&#39;ll dedicate a couple posts to putting on my NodeJS web developer hat and exploring interesting use cases for new features in 2.6. The first feature I&#39;ll dig in to is text search, or, in layman&#39;s terms, Google for your MongoDB documents.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/04/25/a-nodejs-perspective-on-whats-new-in-mongodb-2-6-part-ii-aggregation-out">A NodeJS Perspective on What's New in MongoDB 2.6, Part II: Aggregation $out</a></h2><div class="title-byline-container"><div class="credits">April 25, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//samuellam.files.wordpress.com/2012/09/nodemongo.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>From a performance perspective as well as a developer productivity perspective, MongoDB really shines when you only need to load one document to display a particular page. A traditional hard drive only needs one sequential read to load a single MongoDB document, which limits your performance overhead. In addition, much like how <a href="http://rapgenius.com/Nas-one-mic-lyrics#note-948605">Nas says life is simple because all he needs is one mic</a>, grouping all the data for a single page into one document makes understanding and debugging the page much simpler.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/05/09/whats-new-in-mongoose-3-8-9">What's New in Mongoose 3.8.9</a></h2><div class="title-byline-container"><div class="credits">May 09, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//houstonbeerweek.com/cal/uploads/mvsc.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>I have an important announcement to make: over the last couple weeks I&#39;ve been taking over maintaining <a href="http://mongoosejs.com/">mongoose</a>, the popular MongoDB/NodeJS ODM. I have some very big shoes to fill, <a href="https://twitter.com/aaronheckmann">Aaron Heckmann</a> has done an extraordinary job building mongoose into an indispensable part of the NodeJS ecosystem. As an avid user of mongoose over the last two years, I look forward to continuing mongoose&#39;s storied tradition of making dealing with data elegant and fun. However, mongoose isn&#39;t perfect, and I&#39;m already looking forward to the next major stable release, 4.0.0. Suggestions are most welcome, but please be patient, I&#39;m still trying to catch up on the backlog of issues and pull requests.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/06/03/the-future-of-mongoosejs">The Future of MongooseJS</a></h2><div class="title-byline-container"><div class="credits">June 03, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//html5hub.com/wp-content/uploads/2013/11/es6-hiway-sign.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>Two weeks ago marked a big milestone: <a href="https://github.com/LearnBoost/mongoose/blob/master/History.md#390-unstable--2014-05-22">mongoose 3.9.0</a> was released. Be warned, mongoose&#39;s versioning practice is that even numbered branches are stable and odd are unstable. While all our tests check out on 3.9.0, I would recommend sticking to 3.8.x releases in production for now. 3.9.0 was mongoose&#39;s first unstable release since October 2013. While the changes in 3.9.0 were relatively minor, they open the door to getting some interesting features into 4.0. Here are some of the high-level features I think should make it in to 4.0:</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/09/04/defending-against-query-selector-injection-attacks">Defending Against Query Selector Injection Attacks</a></h2><div class="title-byline-container"><div class="credits">September 04, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//farm3.static.flickr.com/2457/3826282995_3e69f496b4_m.jpg" style="width: 100%"/></div><div class="col-lg-9"><em><p>In case you haven&#39;t come across Petko Petkov&#39;s post on injection attacks against MongoDB and NodeJS yet, <a href="http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html">its definitely worth a careful read</a>. In this article, he explains a pretty simple exploit that I suspect affects a fair number of applications, including some that I&#39;ve implemented.</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/12/04/new-blog-and-book-announcement">New Blog and Book Announcement</a></h2><div class="title-byline-container"><div class="credits">December 04, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//i.imgur.com/n3Ekf24.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>I have a couple important announcements to make. First, as you might have</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2014/12/19/mongoose-397">What's new in Mongoose 3.9.7</a></h2><div class="title-byline-container"><div class="credits">December 19, 2014</div></div></div><div class="row"><div class="col-lg-3"><img src="//upload.wikimedia.org/wikipedia/commons/d/d9/Vosmangoesten_zoo_Lille.JPG" style="width: 100%"/></div><div class="col-lg-9"><em><p>Mongoose 3.9.7 has just been released. While I did say that 3.9.6 would be the</p>
</em></div></div></div><div class="container-fluid"><div class="row"><h2><a href="/2015/01/17/angularjs-loopback">Creating REST APIs and Clients with LoopBack and AngularJS</a></h2><div class="title-byline-container"><div class="credits">January 17, 2015</div></div></div><div class="row"><div class="col-lg-3"><img src="//i.imgur.com/PULVzVs.png" style="width: 100%"/></div><div class="col-lg-9"><em><p>Recently, I&#39;ve been looking into <a href="http://strongloop.com/node-js/loopback-framework/">StrongLoop&#39;s LoopBack framework</a>. LoopBack generates Express REST APIs by asking you a few simple questions at the command line. LoopBack lets you swap out different storage layers. For each model you define, you can choose to store it in MongoDB, Oracle, MySQL, or Microsoft SQL Server (or even in memory). Say you decide to store your users in MongoDB but your user&#39;s gift cards in MySQL (for transactions). Even if you started writing your code with gift cards stored in MongoDB, LoopBack&#39;s database abstraction layer makes switching a one-liner. Furthermore, LoopBack has SDKs for generating REST API clients in AngularJS, Android, and iOS. In short, LoopBack is a powerful tool for generating REST APIs that you can extend to scaffold client-side code.</p>
</em></div></div></div></div></div><div class="row"><div class="pull-left"><a href="/page/1"><< Newer Articles</a></div><div class="pull-right"><a href="/page/3">Older Articles >></a></div></div></div><div style="padding-bottom: 100px">&nbsp;</div><script type="text/javascript">!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
  analytics.load("5DErrxzVhprg8sNh8xaiKDR6dNa7yGTI");
  analytics.page()
}}();</script></body></html>